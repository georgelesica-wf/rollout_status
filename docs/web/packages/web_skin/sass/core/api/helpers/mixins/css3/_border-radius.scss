// ********************************************************

////
/// Helper mixins pertaining to [experimental CSS3 border-radius properties](http://www.w3.org/TR/2002/WD-css3-border-20021107/#the-border-radius)
/// ---
/// @since 1.1.0
/// @access public
/// @group core.utils.css3
/// @link http://www.w3.org/TR/2002/WD-css3-border-20021107/#the-border-radius CSS3 Border Radius Spec
////

//
//   DECLARE MODULE:
//
    $module: 'core/api/helpers/mixins/css3/border-radius';
    $module: add-api-module($module);
//
//   DEPENDENCY CHECK:
//
    $module-deps: dependencies-met(for $module, mixin experimental,
                                                mixin experimental-property-and-value-only-for,
                                                function is,
                                                function is-true,
                                                function append);
//
// ********************************************************


///
/// Round all corners by a specific amount.
/// ---
/// @requires {variable} $border-radius-base
/// ---
/// @example scss - Examples:
///   .simple   { @include border-radius(4px, 4px); }
///   .compound { @include border-radius(2px 5px, 3px 6px); }
///   .crazy    { @include border-radius(1px 3px 5px 7px, 2px 4px 6px 8px)}
///
/// @example css - Generates:
///   .simple {
///     border-radius: 4px / 4px;
///   }
///
///   .compound {
///     border-radius: 2px 5px / 3px 6px;
///   }
///
///   .crazy {
///     border-radius: 1px 3px 5px 7px / 2px 4px 6px 8px;
///   }
/// ---
/// @param {Number}         $radius             [$border-radius-base] - If the `$vertical-radius` param is used, this param will represent the horizontal radius.
/// @param {Number|Boolean} $vertical-radius    [false]
///
@mixin border-radius($radius: $border-radius-base, $vertical-radius: false) {
    $radius: if($vertical-radius, #{$radius} / #{$vertical-radius}, $radius);

    @include experimental(border-radius, $radius);
}

///
/// Round corner at a specified position by amount.
/// ---
/// @requires {variable} $border-radius-base
/// ---
/// @param {String} $vert - Vertical edge [`top` or `bottom`]
/// @param {String} $horz - Horizontal edge [`left` or `right`]
/// @param {Number} $radius [$border-radius-base]
///
@mixin border-corner-radius($vert, $horz, $radius: $border-radius-base) {
    $valid-vert-edge: is($vert, top bottom);
    $valid-horz-edge: is($horz, left right);

    @if not $valid-vert-edge and not $valid-horz-edge {
        @if not $valid-vert-edge {
            @error "`border-corner-radius` mixin expecting value of 'top' or 'bottom' for `$vert` parameter. Was #{$vert}.";
        }
        @if not $valid-horz-edge {
            @error "`border-corner-radius` mixin expecting value of 'left' or 'right' for `$horz` parameter. Was #{$horz}.";
        }
    }

    @include experimental(border-#{$vert}-#{$horz}-radius, $radius);
}

///
/// Round top-left corner only by amount.
/// ---
/// @requires {variable} $border-radius-base
/// @requires {mixin} border-corner-radius
/// ---
/// @param {Number} $radius [$border-radius-base]
///
@mixin border-top-left-radius($radius: $border-radius-base) {
    @include border-corner-radius(top, left, $radius);
}

///
/// Round top-right corner only by amount.
/// ---
/// @requires {variable} $border-radius-base
/// @requires {mixin} border-corner-radius
/// ---
/// @param {Number} $radius [$border-radius-base]
///
@mixin border-top-right-radius($radius: $border-radius-base) {
    @include border-corner-radius(top, right, $radius);
}

///
/// Round bottom-left corner only by amount.
/// ---
/// @requires {variable} $border-radius-base
/// @requires {mixin} border-corner-radius
/// ---
/// @param {Number} $radius [$border-radius-base]
///
@mixin border-bottom-left-radius($radius: $border-radius-base) {
    @include border-corner-radius(bottom, left, $radius);
}

///
/// Round bottom-right corner only by amount.
/// ---
/// @requires {variable} $border-radius-base
/// @requires {mixin} border-corner-radius
/// ---
/// @param {Number} $radius [$border-radius-base]
///
@mixin border-bottom-right-radius($radius: $border-radius-base) {
    @include border-corner-radius(bottom, right, $radius);
}

///
/// Round both top corners by amount.
/// ---
/// @requires {variable} $border-radius-base
/// @requires {mixin} border-top-left-radius
/// @requires {mixin} border-top-right-radius
/// ---
/// @param {Number} $radius [$border-radius-base]
///
@mixin border-top-radius($radius: $border-radius-base) {
    @include border-top-left-radius($radius);
    @include border-top-right-radius($radius);
}

///
/// Round both right corners by amount.
/// ---
/// @requires {variable} $border-radius-base
/// @requires {mixin} border-top-right-radius
/// @requires {mixin} border-bottom-right-radius
/// ---
/// @param {Number} $radius [$border-radius-base]
///
@mixin border-right-radius($radius: $border-radius-base) {
    @include border-top-right-radius($radius);
    @include border-bottom-right-radius($radius);
}

///
/// Round both bottom corners by amount.
/// ---
/// @requires {variable} $border-radius-base
/// @requires {mixin} border-bottom-left-radius
/// @requires {mixin} border-bottom-right-radius
/// ---
/// @param {Number} $radius [$border-radius-base]
///
@mixin border-bottom-radius($radius: $border-radius-base) {
    @include border-bottom-left-radius($radius);
    @include border-bottom-right-radius($radius);
}

///
/// Round both left corners by amount.
/// ---
/// @requires {variable} $border-radius-base
/// @requires {mixin} border-top-left-radius
/// @requires {mixin} border-bottom-left-radius
/// ---
/// @param {Number} $radius [$border-radius-base]
///
@mixin border-left-radius($radius: $border-radius-base) {
  @include border-top-left-radius($radius);
  @include border-bottom-left-radius($radius);
}
