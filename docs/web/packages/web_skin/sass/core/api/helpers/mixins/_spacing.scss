// ********************************************************

////
/// Helper mixins pertaining to global component spacing
/// ---
/// @since 1.9.0
/// @access public
/// @group core.utils.spacing
////

//
//   DECLARE MODULE:
//
    $module: 'core/api/helpers/mixins/spacing';
    $module: add-api-module($module);
//
// ********************************************************


///
/// Reusable styles for removing all left padding and margin of a block element
/// @since 1.1.2
///
@mixin block-flush-left() {
    padding-left: 0 !important;
    margin-left: 0 !important;
}

///
/// Reusable styles for removing all right padding and margin of a block element
/// @since 1.1.2
///
@mixin block-flush-right() {
    padding-right: 0 !important;
    margin-right: 0 !important;
}

///
/// Generates utility CSS classes for adding (or removing) margin / padding.
///
/// The classes are all prefixed with the "layout" prefix (`l-`).
///
/// See the example below for more concrete implementations, and the pattern used to generate the class names.
/// ---
/// @access private
/// @group core.internals.spacing
/// @link https://docs.workiva.org/web-skin/latest/css/#helper-classes-spacing Spacing CSS classes demo
/// ---
/// @example scss - Generated CSS class / property-value pattern
///   .l-#{$type}-#{$amount},
///   .l-#{$type}-#{$amount}-#{$direction} {
///     #{$type}-#{$direction}: $amount !important;
///   }
/// ---
/// @example html - Using the generated CSS classes
///   <div class="l-margin-none">Zero margin</div>
///   <div class="l-padding-none">Zero padding</div>
///
///   <!-- Available in all four directions -->
///   <div class="l-padding-top-none">Zero top padding</div>
///
///   <!-- Available in all four directions, and all size keys in `$component-spacing-config` -->
///   <div class="l-margin-top-base">Base top margin</div>
///   <div class="l-padding-top-base">Base top padding</div>
///
@mixin generate-margin-padding-utility-classes() {
    @each $spacing-type in margin padding {
        @each $amount-key, $amount in $component-spacing-config {
            .l-#{$spacing-type}-#{$amount-key} {
                #{$spacing-type}: to-rem($amount) !important;
            }

            @each $direction in top right bottom left {
                .l-#{$spacing-type}-#{$direction}-#{$amount-key} {
                    #{$spacing-type}-#{$direction}: to-rem($amount) !important;
                }
            }
        }
    }
}

///
/// Reusable CSS classes for adding / removing spacing between elements.
/// @see {variable} $component-spacing-config
///
@mixin component-spacing-utility-classes() {
    // ----------------------------------------------------
    //  Generate utility classes for padding / margin
    // ----------------------------------------------------
    @include generate-margin-padding-utility-classes();

    // ----------------------------------------------------
    //  White space utility classes
    // ----------------------------------------------------
    .l-white-space-normal {
        white-space: normal !important;
    }

    .l-white-space-nowrap {
        white-space: nowrap !important;
    }

    .l-white-space-pre {
        white-space: pre !important;
    }

    .l-white-space-pre-wrap {
        white-space: pre-wrap !important;
    }

    .l-white-space-pre-line {
        white-space: pre-line !important;
    }

    // ----------------------------------------------------
    //  DEPRECATED utility classes to remove any added spacing
    //
    //  TODO: Remove in the 2.0.0 release, use classes
    //        generated by `generate-margin-padding-utility-classes`
    //        instead.
    // ----------------------------------------------------
    .flush {
        @extend .l-margin-none;
    }

    .flush-left {
        @extend .l-margin-left-none;
        @extend .l-padding-left-none;
    }

    .flush-right {
        @extend .l-margin-right-none;
        @extend .l-padding-right-none;
    }
}
